
<h1 class="text-center"><i class="mdi mdi-keyboard-variant text-primary"></i>Technologies</h1>


<div id="accordion">
  <h3>HTML5</h3>

  <div>
    <ul>
      <li class="unten"><%= image_tag('logos/w3c', height: '30px', width: '30px') %> <a href="https://w3schools.com/" class="link-big" target="_blank">w3schools</a></li>
      <li>2014 recommandation released by <span title="World Wide Web Consortium"> W3C</span></li>

      <li>New semantic elementes like <code>header</code>, <code>footer</code>, <code>article</code> and <code>section</code></li>
      <li>New attributes of form elements like <code>number</code>, <code>date</code>, <code>time</code>, <code>calendar</code> and <code>range</code></li>
      <li>New graphic elements like <code>svg</code>, <code>canvas</code> and <code>iframe</code></li>
      <li>New multimedia elements <code>audio</code> and <code>video</code></li>
    </ul>
    
  </div>
  <h3>CSS3</h3>
  
  <div>
    <ul>
    <li>Flexible Box Layout Module <code>display: flex</code></li>
    <li>A flexbox layout consists of a parent element, with one or more child elements.</li>
    <li>Border Box width and height properties (and min/max properties) includes content, padding and border <code>box-sizing: border-box;</code></li>
  </ul>
  </div>
  <h3>Bootstrap 4</h3>
  <div>
    <ul>
      <li class="unten"><%= image_tag('logos/bootstrap', height: '30px', width: '30px') %> <a href="https://getbootstrap.com/" class="link-big" target="_blank">Bootstrap</a></li>
      <li>Usage of predefined classes for navbar, container, badges, buttons, tables</li>
      <li>Responsive images with <code>img-fluid</code> with max-width: 100%; height: auto</li>
      <li>Helper classes for padding <code>pr-sm-1</code>, <code>pl-sm-1</code> and margin <code>mt-1</code>, <code>mb-1</code></li>
      <li>Card Decks with equal height of each card in a line</li>
      <li>Media queries for small screens <code>@media (min-width: 768px) { ... }</code></li>
      <li>Special print layout with media query for print <code>@media only print { ... }</code></li>
      <li>Large selection of <a href="https://cdn.materialdesignicons.com/1.1.34/" class="link-small">Material Design Icons</a> - <i class="mdi mdi-pencil-box"></i><i class="mdi mdi-chart-bar"></i><i class="mdi mdi-home"></i> - with variable font-size and color</li>
    </ul>
    
  </div>
  <h3>SASS</h3>
  <div>
    <ul>
      <li class="unten"><%= image_tag('logos/sass', width: '60px') %> <a href="http://sass-lang.com/" target="_blank" class="link-big">SASS</a></li>
      <li>most mature, stable, and powerful professional grade CSS extension language in the world.</li>
      <li>Sass has been actively supported for about 11 years by its loving Core Team.</li>
      <li>CSS on its own can be fun, but stylesheets are getting larger, more complex, and harder to maintain</li>
      <li>This is where a preprocessor can help. Sass lets you use features that don't exist in CSS yet</li>
      
      <dl>
        <dt>Variables</dt>
        <dd>You can store things like colors, font stacks, or any CSS value you think you'll want to reuse. Sass uses the $ symbol to make something a variable<hr>
        <pre>
          $font-stack:    Helvetica, sans-serif;
          $primary-color: #333;

          body {
               font: 100% $font-stack;
               color: $primary-color;
          }
        </pre><hr>
        </dd>
        <dt>Nesting</dt>
        <dd>nest your CSS selectors in a way that follows the same visual hierarchy of your HTML<hr> <pre>nav {
                      ul {
                        margin: 0;
                        padding: 0;
                        list-style: none;
                      }

                      li { display: inline-block; }

                      a {
                        display: block;
                        padding: 6px 12px;
                        text-decoration: none;
                      }
}</pre><hr></dd>
<dt>Partials</dt>
<dd>You can create partial Sass files that contain little snippets of CSS that you can include in other Sass files. This is a great way to modularize your CSS and help keep things easier to maintain. A partial is simply a Sass file named with a leading underscore. You might name it something like <code>_partial.scss</code>.</dd>
<dt>Import</dt>
<dd>Sass builds on top of the current CSS @import but instead of requiring an HTTP request, Sass will take the file that you want to import and combine it with the file you're importing into so you can serve a single CSS file to the web browser.<br>
<code>@import 'filename'</code></dd>
<dt>Mixins</dt>
<dd>A mixin lets you make groups of CSS declarations that you want to reuse throughout your site. You can even pass in values to make your mixin more flexible.
  <hr>
<pre>
  @mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

.box { @include border-radius(10px); }
</pre><hr></dd>
<dt>Extend/Inheritance</dt>
<dd>Using <code>@extend</code> lets you share a set of CSS properties from one selector to another
<pre>
  %message-shared {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}
.success {
  @extend %message-shared;
  border-color: green;
}
</pre><hr></dd>
<dt>Operators</dt>
<dd>Doing math in your CSS is very helpful
  <hr>
<pre>
  .container { width: 100%; }


article[role="main"] {
  float: left;
  width: 600px / 960px * 100%;
}

aside[role="complementary"] {
  float: right;
  width: 300px / 960px * 100%;
}
</pre><hr>

</dd>

      </dl>
      <li class="unten"><%= image_tag('logos/sass', width: '60px') %> <a href="http://sass-lang.com/documentation/Sass/Script/Functions.html" target="_blank" class="link-big">Functions</a>
        <ul>
          <li>ligthen</li>
          <li>darken</li>
          <li>saturate</li>
        </ul></li>
    </ul>
    
  </div>
  <h3>JavaScript</h3>
  <div>
    <ul>
      <li class="unten"><%= image_tag('logos/javascript', height: '30px', width: '30px') %> Javascript </li>
      <li>Raty</li>
      <li>Highcharts</li>
    </ul>
    
  </div>
  <h3>Jquery</h3>
  <div>
    <p>
    Nam enim risus, molestie et, porta ac, aliquam ac, risus. Quisque lobortis.
    Phasellus pellentesque purus in massa. Aenean in pede. Phasellus ac libero
    ac tellus pellentesque semper. Sed ac felis. Sed commodo, magna quis
    lacinia ornare, quam ante aliquam nisi, eu iaculis leo purus venenatis dui.
    </p>
    <ul>
      <li>List item one</li>
      <li>List item two</li>
      <li>List item three</li>
    </ul>
  </div>
  <h3>Jquery-UI</h3>
  <div>
    <p>
    Nam enim risus, molestie et, porta ac, aliquam ac, risus. Quisque lobortis.
    Phasellus pellentesque purus in massa. Aenean in pede. Phasellus ac libero
    ac tellus pellentesque semper. Sed ac felis. Sed commodo, magna quis
    lacinia ornare, quam ante aliquam nisi, eu iaculis leo purus venenatis dui.
    </p>
    <ul>
      <li>List item one</li>
      <li>List item two</li>
      <li>List item three</li>
    </ul>
  </div>
  <h3>Ruby</h3>
  <div>
    <ul>
      <li class="unten" ><%= image_tag('logos/ruby', height: '30px', width: '30px') %> <a href="https://www.ruby-lang.org/de/" target="_blank" class="link-big"> Ruby</a></li>
      <li>Ternary operator for dynamic page title: <code> 
        @page_title ? @page_title : 'Welcome'  | Books
      </code></li>
      <li>Special functions: <code>time_ago_in_words(book.created_at)</code></li>
      <li>Iterations: <code>@books.each do |book|</code></li>
      <li>Conditions: <code>if TimeDifference.between( Date.today, @return_date_min).in_days <= 3</code></li>
      <li>Array functions: <code>Author.all.collect{|x| [x.lname + ', ' + x.fname, x.id]}.sort</code> </li>
      <li>Tag as optional value for Model book: <code>belongs_to :tag, optional: true</code></li>
    </ul>
    
  </div>
  <h3>Rails</h3>
  <div>
    <ul>
      <li class="unten"> <%= image_tag('logos/rails', width: '60px') %> <a href="http://guides.rubyonrails.org/" target="_blank" class="link-big">Ruby on Rails</a></li>
      <li>Models</li>
      <li>Controllers</li>
      <li>Views</li>
      <li>SQlite Database</li>
      
    </ul>
    
  </div>
  <h3>Gems</h3>
  <div>
    <dl>
      <dt>bootstrap 4</dt>
      <dd>most popular HTML, CSS, and JavaScript framework for developing responsive, mobile first projects on the web</dd>
      <dt>devise</dt>
      <dd>flexible authentication solution for Rails based on Warden</dd>
      <dt>jquery-rails</dt>
      <dd>provides jQuery and the jQuery-ujs driver for your Rails 4+ application.</dd>
      <dt>jquery-ui-rails</dt>
      <dd>packages the jQuery UI assets (JavaScripts, stylesheets, and images) for the Rails asset pipeline</dd>
      <dt>jquery-ui-themes</dt>
      <dd>allows inclusion of the pre built jquery themes in the asset pipeline without having to edit the files each time. Used theme is "start".</dd>
      <dt>carrierwave</dt>
      <dd>Upload files in your Ruby applications, map them to a range of ORMs, store them on different backends.</dd>
      <dt>mini-magick</dt>
      <dd>Manipulate images with minimal use of memory via ImageMagick / GraphicsMagick</dd>
      <dt>chartkick</dt>
      <dd>Create beautiful Javascript charts with one line of Ruby</dd>
      <dt>groupdate</dt>
      <dd>The simplest way to group temporal data</dd>
      <dt>hightop</dt>
      <dd>A nice shortcut for group count queries</dd>
      <dt>time_difference</dt>
      <dd>method to calculate difference between two given time. You can do a Ruby time difference in year, month, week, day, hour, minute, and seconds.</dd>
      <dt>will_paginate</dt>
      <dd> provides a simple API for performing paginated queries with Active Record, DataMapper and Sequel, and includes helpers for rendering pagination links in Rails</dd>
      <dt>will_paginate-bootstrap4</dt>
      <dd>ntegrates the Twitter Bootstrap pagination component with the will_paginate pagination gem</dd>
      <dt>friendly_id</dt>
      <dd>lets you create pretty URLs and work with human-friendly strings as if they were numeric ids.</dd>
      <dt>redcarpet</dt>
      <dd>fast, safe and extensible Markdown to (X)HTML parser</dd>
    </dl>
    
  </div>
  <h3>SQLite</h3>
  <div>
    <ul>
      <li class="unten"><%= image_tag('logos/sqlite', width: '60px') %> <a href="https://www.sqlite.org/" class="link-big" target="_blank">SQLite </a></li>
      <li><a href="http://sqlitebrowser.org/" target="_blank" class="link-small"> DB Browser</a></li>
    </ul>
    
  </div>
  <h3>Github</h3>
  <div>
  <ul>
   <li class="unten"><%= image_tag('logos/github', height: '30px', width: '30px') %> <a href="https://github.com/tilogermer/books" target="_blank" class="link-big"> Github</a></li>
   <li>development platform inspired by the way you work</li>
   <li>host and review code, manage projects, and build software alongside millions of other developers</li>
  </ul>
  
    
  </div>
</div>



<script>
  $( function() {
   
    $( "#accordion" ).accordion({
      heightStyle: "content"
    });
    
        
  } );
  </script>
